
#########################################################
#                                                       #
#  Histogram-Free Multicanonical Sampling - Input File  # 
#  (using numerical integration as an example)          #
#                                                       #
#  To run binlessMUCA.py with this input file:          #
#    $ python binlessMUCA.py input.txt                  #
#                                                       #
#                                                       #
#  Improved sampling scheme described in Section 4 in   #
#  the paper can be turned on/off by switching the      #
#  "improved" flag on/off.                              #
#                                                       #
#########################################################


################## Program Parameters ###################

# Seed for Random Number Generator **********************
# * specify the seed with any positive number
# * -1 : a random seed will be generated
seed = -1

# Function to Integrate *********************************
# * input in quotations - Python string
# * y(x) in Eq.(14)
function = "x**2.0"

# Integration Domain ************************************
# * a and b in Eq.(14) 
xmin = -2.0
xmax = 2.0

# Number Of Points Per Data Set *************************
# * k in Eq.(5)
points_per_dataSet = 1000

# Maximum Number of Terms in Basis Set Expansion ********
# * max. value for m in Eq.(8)
maxBasisTerms = 100

# Kolmogorov-Smirnov Cutoff Probability *****************
# * cutoff value for p
KS_cutoff = 0.17

# Maximum Number of Iterations **************************
maxIter = 1000

# Flag for Improved Sampling Scheme *********************
# * 0 = standard, 1 = improved
# * s: pre-factor for correction in Eq.(18)
improved = 0
s = 0.25



################ Plots: 0 = off, 1 = on #################

# Plot the ECDF, F_0, and empirical remainder ***********
# after each iteration
plotCDF = 0

# Maximum Natural Log of DOS after each iteration *******
plotDOS_iter = 0

# Plot Natural Log of DOS at the end of simulation ******
plotDOS_end = 0

# Plot empirical remainder vs. analytic remainder *******
# after each iteration
plotFT = 0

